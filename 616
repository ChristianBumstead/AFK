using System;
using System.Threading.Tasks;
using Telegram.Bot;
using Telegram.Bot.Exceptions;
using Telegram.Bot.Polling;
using Telegram.Bot.Types;
using Telegram.Bot.Types.Enums;

namespace KneeRehabilitationBot
{
    class Program
    {
        private static TelegramBotClient botClient;

        static async Task Main(string[] args)
        {
            string botToken = "YOUR_BOT_TOKEN_HERE"; // Укажите токен вашего бота
            botClient = new TelegramBotClient(botToken);

            using var cts = new CancellationTokenSource();

            var receiverOptions = new ReceiverOptions
            {
                AllowedUpdates = Array.Empty<UpdateType>() // Получать все типы обновлений
            };

            botClient.StartReceiving(
                HandleUpdateAsync,
                HandleErrorAsync,
                receiverOptions,
                cancellationToken: cts.Token
            );

            var botInfo = await botClient.GetMeAsync();
            Console.WriteLine($"Бот {botInfo.Username} запущен. Нажмите Ctrl+C для завершения.");

            // Ожидаем завершения программы
            Console.CancelKeyPress += (_, _) => cts.Cancel();
            await Task.Delay(-1, cts.Token);
        }

        // Обработчик входящих сообщений
        private static async Task HandleUpdateAsync(ITelegramBotClient botClient, Update update, CancellationToken cancellationToken)
        {
            if (update.Type != UpdateType.Message || update.Message!.Type != MessageType.Text)
                return;

            var chatId = update.Message.Chat.Id;
            var messageText = update.Message.Text;

            switch (messageText)
            {
                case "/start":
                    await botClient.SendTextMessageAsync(chatId, "Добро пожаловать в помощник по реабилитации после эндопротезирования коленного сустава! Выберите этап реабилитации:\n\n1️⃣ Ранний этап (до 2 недель)\n2️⃣ Средний этап (2–6 недель)\n3️⃣ Поздний этап (после 6 недель)\n\nВведите номер этапа или /help для справки.", cancellationToken: cancellationToken);
                    break;

                case "1":
                    await botClient.SendTextMessageAsync(chatId, "Вы выбрали ранний этап реабилитации. Выберите упражнение:\n\n1️⃣ Дыхательные упражнения\n2️⃣ Изометрические упражнения для квадрицепса\n3️⃣ Изометрические упражнения для ягодичных мышц\n4️⃣ Движения стопами и пальцами", cancellationToken: cancellationToken);
                    break;

                case "2":
                    await botClient.SendTextMessageAsync(chatId, "Вы выбрали средний этап реабилитации. Выберите упражнение:\n\n1️⃣ Активное сгибание и разгибание в коленном суставе\n2️⃣ Поднятие прямой ноги\n3️⃣ Упражнения с резиновой лентой\n4️⃣ Формирование правильной походки", cancellationToken: cancellationToken);
                    break;

                case "3":
                    await botClient.SendTextMessageAsync(chatId, "Вы выбрали поздний этап реабилитации. Выберите упражнение:\n\n1️⃣ Приседания с опорой\n2️⃣ Подъёмы на носки\n3️⃣ Баланс на одной ноге\n4️⃣ Ходьба", cancellationToken: cancellationToken);
                    break;

                case "1️⃣":
                    await botClient.SendTextMessageAsync(chatId, "Дыхательные упражнения:\n\n- Глубокий вдох и выдох: вдохните через нос, считая до 3, задержите дыхание на 2 секунды, выдохните через рот, считая до 4. Повторите 10 раз.\n- Дыхание с сопротивлением: выдыхайте через губы, сложенные трубочкой. Повторите 8–10 раз.", cancellationToken: cancellationToken);
                    break;

                case "2️⃣":
                    await botClient.SendTextMessageAsync(chatId, "Изометрические упражнения для квадрицепса:\n\n1. Лягте на спину, напрягите мышцы передней поверхности бедра.\n2. Удерживайте напряжение 5 секунд, затем расслабьтесь. Повторите 10 раз.", cancellationToken: cancellationToken);
                    break;

case "/help":
                    await botClient.SendTextMessageAsync(chatId, "Это бот для реабилитации после эндопротезирования коленного сустава. Выберите этап реабилитации и упражнение для выполнения. Если у вас есть вопросы, проконсультируйтесь с врачом.", cancellationToken: cancellationToken);
                    break;

                default:
                    await botClient.SendTextMessageAsync(chatId, "Извините, я не понимаю эту команду. Введите /start, чтобы начать заново.", cancellationToken: cancellationToken);
                    break;
            }
        }

        // Обработчик ошибок
        private static Task HandleErrorAsync(ITelegramBotClient botClient, Exception exception, CancellationToken cancellationToken)
        {
            var errorMessage = exception switch
            {
                ApiRequestException apiEx => $"Telegram API Error:\n{apiEx.ErrorCode}\n{apiEx.Message}",
                _ => exception.ToString()
            };

            Console.WriteLine(errorMessage);
            return Task.CompletedTask;
        }
    }
}
